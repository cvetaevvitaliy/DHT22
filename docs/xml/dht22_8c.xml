<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="dht22_8c" kind="file" language="C++">
    <compoundname>dht22.c</compoundname>
    <includes refid="dht22_8h" local="yes">dht22.h</includes>
    <incdepgraph>
      <node id="14">
        <label>stdbool.h</label>
      </node>
      <node id="13">
        <label>dht22.h</label>
        <link refid="dht22_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/dht22.c</label>
        <link refid="dht22.c"/>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" prot="public" static="no">
        <name>BETWEEN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>(dt &gt;= a &amp;&amp; dt &lt;= b)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="143" column="9" bodyfile="src/dht22.c" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dht22_8c_1a1192e506d4a87efdd7c82c096fcaaa25" prot="public" static="no">
        <name>TIMING_ERROR</name>
        <param></param>
        <initializer>do {                                             \
        handle-&gt;error_flags.timing = true;           \
        handle-&gt;state              = <ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aeb92f9329a3747c586851824186a5817" kindref="member">DHT22_FINISHED</ref>; \
    } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="145" column="9" bodyfile="src/dht22.c" bodystart="145" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="dht22_8c_1ac3296e2b990db22a8c9192e5d1822dee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_pin_out</definition>
        <argsstring>(dht22 *handle)</argsstring>
        <name>set_pin_out</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up the pin as an output <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the DHT22 handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="7" column="1" bodyfile="src/dht22.c" bodystart="7" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1a92433501aeecd6a1692354a91e533cc0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_pin_in</definition>
        <argsstring>(dht22 *handle)</argsstring>
        <name>set_pin_in</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets up the pin as an input <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the DHT22 handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="24" column="1" bodyfile="src/dht22.c" bodystart="24" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1a4bc9e0ef8d5951f1da6c527096d0389c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633" kindref="member">DHT22_RESULT</ref></type>
        <definition>DHT22_RESULT dht22_read_data</definition>
        <argsstring>(dht22 *handle)</argsstring>
        <name>dht22_read_data</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reads the current temperature and humidity from the sensor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the DHT22 handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the function was successful or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="39" column="1" bodyfile="src/dht22.c" bodystart="39" bodyend="86"/>
        <references refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" compoundref="dht22_8h" startline="59">dht22::state</references>
        <references refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aff1b5848a95cb30baa49a6cf57ff732e" compoundref="dht22_8h" startline="28">DHT22_READY</references>
        <references refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633aeae0b1006927b44bdc5fc81649aabaf1" compoundref="dht22_8h" startline="19">DHT22_ERROR</references>
        <references refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79a8ece4dd3d8c2333e0ad655c44afac0e2" compoundref="dht22_8h" startline="29">DHT22_BUSY</references>
        <references refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" compoundref="dht22_8h" startline="52">dht22::bit_pos</references>
        <references refid="structdht22_1a866a73f568a9c1580242de93194402d2" compoundref="dht22_8h" startline="53">dht22::last_val</references>
        <references refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3">dht22::error_flags</references>
        <references refid="structdht22_1a3f32f989e34d67aa0736e2606a255e55" compoundref="dht22_8h" startline="61">dht22::parity</references>
        <references refid="structdht22_1a20f65ad56869382ed8681b9dd1aa85d6" compoundref="dht22_8h" startline="62">dht22::timing</references>
        <references refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" compoundref="dht22_8h" startline="51">dht22::rx_buffer</references>
        <references refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" compoundref="dht22_8h" startline="65">dht22::config</references>
        <references refid="structdht22__config_1a081bd8cbb6d27fdb0ab0681b66cfd080" compoundref="dht22_8h" startline="38">dht22_config::gpio_port</references>
        <references refid="structdht22__config_1a1468dc79e1c16d2ae8597631191ab190" compoundref="dht22_8h" startline="37">dht22_config::gpio_pin</references>
        <references refid="structdht22__config_1a30b15aedcc086ca7abb69f7ac012ce64" compoundref="dht22_8h" startline="39">dht22_config::timer</references>
        <references refid="structdht22__config_1a9209e1ec26ff459b75d3981ca197ec43" compoundref="dht22_8h" startline="40">dht22_config::timer_channel</references>
        <references refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aeb92f9329a3747c586851824186a5817" compoundref="dht22_8h" startline="30">DHT22_FINISHED</references>
        <references refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a403a5dfe74ccad98a28bb168f46ba6a5" compoundref="dht22_8h" startline="20">DHT22_TIMING_ERROR</references>
        <references refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633abeb8a3283bb01449c62aaca24c0b697e" compoundref="dht22_8h" startline="21">DHT22_CHECKSUM_ERROR</references>
        <references refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a5fce7d39386d669757a5ef19ff864b76" compoundref="dht22_8h" startline="18">DHT22_OK</references>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1ab1c585a3f37b65ba94f3b6d0d95c548b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633" kindref="member">DHT22_RESULT</ref></type>
        <definition>DHT22_RESULT dht22_init</definition>
        <argsstring>(dht22_config *config, dht22 *handle)</argsstring>
        <name>dht22_init</name>
        <param>
          <type><ref refid="structdht22__config" kindref="compound">dht22_config</ref> *</type>
          <declname>config</declname>
        </param>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Initializes the DHT22 handle using the provided configuration <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>config</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the initialization structure </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the DHT22 handle you want to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the function was successful or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="88" column="1" bodyfile="src/dht22.c" bodystart="88" bodyend="91"/>
        <references refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" compoundref="dht22_8h" startline="65">dht22::config</references>
        <references refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a5fce7d39386d669757a5ef19ff864b76" compoundref="dht22_8h" startline="18">DHT22_OK</references>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1af88e368924c132ae5b1dc20205019207" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633" kindref="member">DHT22_RESULT</ref></type>
        <definition>DHT22_RESULT dht22_deinit</definition>
        <argsstring>(dht22 *handle)</argsstring>
        <name>dht22_deinit</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deinitializes the DHT22 communication <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the DHT22 handle </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>whether the function was successful or not </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="93" column="1" bodyfile="src/dht22.c" bodystart="93" bodyend="93"/>
        <references refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a5fce7d39386d669757a5ef19ff864b76" compoundref="dht22_8h" startline="18">DHT22_OK</references>
        <references refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" compoundref="dht22_8h" startline="52">dht22::bit_pos</references>
        <references refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" compoundref="dht22_8h" startline="51">dht22::rx_buffer</references>
        <references refid="structdht22_1a38adb4de3d9d0391675c323d13503af7" compoundref="dht22_8h" startline="57">dht22::hum</references>
        <references refid="structdht22_1a24d61a35b72d7299eb6b5f48e71a571b" compoundref="dht22_8h" startline="56">dht22::temp</references>
        <references refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3">dht22::error_flags</references>
        <references refid="structdht22_1a3f32f989e34d67aa0736e2606a255e55" compoundref="dht22_8h" startline="61">dht22::parity</references>
        <references refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" compoundref="dht22_8h" startline="59">dht22::state</references>
        <references refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aeb92f9329a3747c586851824186a5817" compoundref="dht22_8h" startline="30">DHT22_FINISHED</references>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1aefb830b1f86633ee181f44df0ae614f1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void write_bit</definition>
        <argsstring>(dht22 *handle, bool bit)</argsstring>
        <name>write_bit</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>bit</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes a bit to the current bit position (bit_pos) in the rx_buffer <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>DHT22 handle </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bit</parametername>
</parameternamelist>
<parameterdescription>
<para>bit to store </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="100" column="1" bodyfile="src/dht22.c" bodystart="100" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1ab95eb6a0a585144280871c8c456cf49f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>static float get_float</definition>
        <argsstring>(uint8_t *dht_data)</argsstring>
        <name>get_float</name>
        <param>
          <type>uint8_t *</type>
          <declname>dht_data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts two bytes from rx_buffer into a float according to the format specified in the datasheet <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dht_data</parametername>
</parameternamelist>
<parameterdescription>
<para>pointer to the two bytes to be converted </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result of the conversion </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="116" column="1" bodyfile="src/dht22.c" bodystart="116" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1a6125f5172ab863446075761e2e010d2d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void finish_rx</definition>
        <argsstring>(dht22 *handle)</argsstring>
        <name>finish_rx</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Perform last steps of reception like parity check, etc. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>DHT22 handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="130" column="1" bodyfile="src/dht22.c" bodystart="130" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="dht22_8c_1a6119816d8ad1b38b7c732472bba7b0ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dht22_interrupt_handler</definition>
        <argsstring>(dht22 *handle)</argsstring>
        <name>dht22_interrupt_handler</name>
        <param>
          <type><ref refid="structdht22" kindref="compound">dht22</ref> *</type>
          <declname>handle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Handles the timer interrupt <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>- a pointer to the DHT22 handle </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dht22.c" line="151" column="1" bodyfile="src/dht22.c" bodystart="151" bodyend="186"/>
        <references refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" compoundref="dht22_8h" startline="65">dht22::config</references>
        <references refid="structdht22__config_1a30b15aedcc086ca7abb69f7ac012ce64" compoundref="dht22_8h" startline="39">dht22_config::timer</references>
        <references refid="structdht22__config_1a9209e1ec26ff459b75d3981ca197ec43" compoundref="dht22_8h" startline="40">dht22_config::timer_channel</references>
        <references refid="structdht22_1a866a73f568a9c1580242de93194402d2" compoundref="dht22_8h" startline="53">dht22::last_val</references>
        <references refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" compoundref="dht22_8h" startline="52">dht22::bit_pos</references>
        <references refid="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" compoundref="dht22_8c" startline="143">BETWEEN</references>
        <references refid="dht22_8c_1a1192e506d4a87efdd7c82c096fcaaa25" compoundref="dht22_8c" startline="145">TIMING_ERROR</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dht22_8h" kindref="compound">dht22.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_pin_out(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitTypeDef<sp/>GPIO_InitStruct;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Pin<sp/><sp/>=<sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a1468dc79e1c16d2ae8597631191ab190" kindref="member">gpio_pin</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Mode<sp/>=<sp/>GPIO_MODE_OUTPUT_OD;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Pull<sp/>=<sp/>GPIO_PULLUP;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Speed<sp/>=<sp/>GPIO_SPEED_FREQ_HIGH;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Speed<sp/>=<sp/>GPIO_SPEED_HIGH;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_Init(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a081bd8cbb6d27fdb0ab0681b66cfd080" kindref="member">gpio_port</ref>,<sp/>&amp;GPIO_InitStruct);</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_pin_in(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitTypeDef<sp/>GPIO_InitStruct;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Pin<sp/><sp/>=<sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a1468dc79e1c16d2ae8597631191ab190" kindref="member">gpio_pin</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Pull<sp/>=<sp/>GPIO_PULLUP;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>STM32F1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Mode<sp/><sp/>=<sp/>GPIO_MODE_AF_INPUT;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Speed<sp/>=<sp/>GPIO_SPEED_FREQ_HIGH;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Mode<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>GPIO_MODE_AF_OD;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Speed<sp/><sp/><sp/><sp/><sp/>=<sp/>GPIO_SPEED_HIGH;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>GPIO_InitStruct.Alternate<sp/>=<sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.gpio_alternate_function;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_Init(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a081bd8cbb6d27fdb0ab0681b66cfd080" kindref="member">gpio_port</ref>,<sp/>&amp;GPIO_InitStruct);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="dht22_8h_1a4bc9e0ef8d5951f1da6c527096d0389c" refkind="member"><highlight class="normal"><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633" kindref="member">DHT22_RESULT</ref><sp/><ref refid="dht22_8c_1a4bc9e0ef8d5951f1da6c527096d0389c" kindref="member">dht22_read_data</ref>(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" kindref="member">state</ref><sp/>!=<sp/><ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aff1b5848a95cb30baa49a6cf57ff732e" kindref="member">DHT22_READY</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633aeae0b1006927b44bdc5fc81649aabaf1" kindref="member">DHT22_ERROR</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" kindref="member">state</ref><sp/>=<sp/><ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79a8ece4dd3d8c2333e0ad655c44afac0e2" kindref="member">DHT22_BUSY</ref>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>clear<sp/>previous<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>-2;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a866a73f568a9c1580242de93194402d2" kindref="member">last_val</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3" kindref="member">error_flags</ref>.<ref refid="structdht22_1a3f32f989e34d67aa0736e2606a255e55" kindref="member">parity</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3" kindref="member">error_flags</ref>.<ref refid="structdht22_1a20f65ad56869382ed8681b9dd1aa85d6" kindref="member">timing</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>5;<sp/>i++)<sp/>handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>generate<sp/>the<sp/>start<sp/>sequence</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>set_pin_out(handle);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_GPIO_WritePin(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a081bd8cbb6d27fdb0ab0681b66cfd080" kindref="member">gpio_port</ref>,<sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a1468dc79e1c16d2ae8597631191ab190" kindref="member">gpio_pin</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GPIO_PIN_RESET);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>HAL_Delay(2);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>set_pin_in(handle);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>__HAL_TIM_SET_COUNTER(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a30b15aedcc086ca7abb69f7ac012ce64" kindref="member">timer</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>enable<sp/>the<sp/>timer<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_TIM_IC_Start_IT(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a30b15aedcc086ca7abb69f7ac012ce64" kindref="member">timer</ref>,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a9209e1ec26ff459b75d3981ca197ec43" kindref="member">timer_channel</ref>)<sp/>!=<sp/>HAL_OK)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633aeae0b1006927b44bdc5fc81649aabaf1" kindref="member">DHT22_ERROR</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>start_tick<sp/>=<sp/>HAL_GetTick();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>wait<sp/>for<sp/>the<sp/>state<sp/>machine<sp/>to<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" kindref="member">state</ref><sp/>!=<sp/><ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aeb92f9329a3747c586851824186a5817" kindref="member">DHT22_FINISHED</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>HAL_GetTick()<sp/>-<sp/>start_tick<sp/>&lt;<sp/>1000)<sp/>{}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>disable<sp/>the<sp/>timer<sp/>interrupts</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(HAL_TIM_IC_Stop_IT(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a30b15aedcc086ca7abb69f7ac012ce64" kindref="member">timer</ref>,</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a9209e1ec26ff459b75d3981ca197ec43" kindref="member">timer_channel</ref>)<sp/>!=<sp/>HAL_OK)<sp/>{</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633aeae0b1006927b44bdc5fc81649aabaf1" kindref="member">DHT22_ERROR</ref>;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3" kindref="member">error_flags</ref>.<ref refid="structdht22_1a20f65ad56869382ed8681b9dd1aa85d6" kindref="member">timing</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a403a5dfe74ccad98a28bb168f46ba6a5" kindref="member">DHT22_TIMING_ERROR</ref>;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3" kindref="member">error_flags</ref>.<ref refid="structdht22_1a3f32f989e34d67aa0736e2606a255e55" kindref="member">parity</ref>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633abeb8a3283bb01449c62aaca24c0b697e" kindref="member">DHT22_CHECKSUM_ERROR</ref>;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" kindref="member">state</ref><sp/>==<sp/><ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aeb92f9329a3747c586851824186a5817" kindref="member">DHT22_FINISHED</ref>)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" kindref="member">state</ref><sp/>=<sp/><ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aff1b5848a95cb30baa49a6cf57ff732e" kindref="member">DHT22_READY</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a5fce7d39386d669757a5ef19ff864b76" kindref="member">DHT22_OK</ref>;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633aeae0b1006927b44bdc5fc81649aabaf1" kindref="member">DHT22_ERROR</ref>;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="dht22_8h_1ab1c585a3f37b65ba94f3b6d0d95c548b" refkind="member"><highlight class="normal"><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633" kindref="member">DHT22_RESULT</ref><sp/><ref refid="dht22_8c_1ab1c585a3f37b65ba94f3b6d0d95c548b" kindref="member">dht22_init</ref>(<ref refid="structdht22__config" kindref="compound">dht22_config</ref>*<sp/>config,<sp/><ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref><sp/>=<sp/>*config;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a5fce7d39386d669757a5ef19ff864b76" kindref="member">DHT22_OK</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93" refid="dht22_8h_1af88e368924c132ae5b1dc20205019207" refkind="member"><highlight class="normal"><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633" kindref="member">DHT22_RESULT</ref><sp/><ref refid="dht22_8c_1af88e368924c132ae5b1dc20205019207" kindref="member">dht22_deinit</ref>(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="dht22_8h_1a1d16fe97ca08e0d2c9b928a36472c633a5fce7d39386d669757a5ef19ff864b76" kindref="member">DHT22_OK</ref>;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_bit(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bit)<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>byten<sp/>=<sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref><sp/>/<sp/>8;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>bitn<sp/><sp/>=<sp/>7<sp/>-<sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref><sp/>%<sp/>8;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bit)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[byten]<sp/>|=<sp/>1<sp/>&lt;&lt;<sp/>bitn;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[byten]<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>bitn);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>get_float(uint8_t*<sp/>dht_data)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>v<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>|=<sp/>(dht_data[0]<sp/>&amp;<sp/>0x7F)<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>v<sp/>|=<sp/>dht_data[1];</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>0.1f<sp/>*<sp/>v;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dht_data[0]<sp/>&amp;<sp/>0x80)<sp/>value<sp/>*=<sp/>-1.0f;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>finish_rx(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>sum<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>4;<sp/>i++)<sp/>sum<sp/>+=<sp/>handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[i];</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(sum<sp/>==<sp/>handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[4])<sp/>{<sp/></highlight><highlight class="comment">//<sp/>checksums<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a38adb4de3d9d0391675c323d13503af7" kindref="member">hum</ref><sp/><sp/>=<sp/>get_float(&amp;handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[0]);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a24d61a35b72d7299eb6b5f48e71a571b" kindref="member">temp</ref><sp/>=<sp/>get_float(&amp;handle-&gt;<ref refid="structdht22_1a47f38aa1f777ab5c907ec0375eae1344" kindref="member">rx_buffer</ref>[2]);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a03251bc0907d3f2709d4b8550b9e90e3" kindref="member">error_flags</ref>.<ref refid="structdht22_1a3f32f989e34d67aa0736e2606a255e55" kindref="member">parity</ref><sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a2f85ff3689520d5276c9431da0f45378" kindref="member">state</ref><sp/>=<sp/><ref refid="dht22_8h_1a73cd960d2d2ae7988ddb46f1c9e49e79aeb92f9329a3747c586851824186a5817" kindref="member">DHT22_FINISHED</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BETWEEN(a,<sp/>b)<sp/>(dt<sp/>&gt;=<sp/>a<sp/>&amp;&amp;<sp/>dt<sp/>&lt;=<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="dht22_8c_1a1192e506d4a87efdd7c82c096fcaaa25" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TIMING_ERROR()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;error_flags.timing<sp/>=<sp/>true;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;state<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>DHT22_FINISHED;<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="dht22_8h_1a6119816d8ad1b38b7c732472bba7b0ec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dht22_8c_1a6119816d8ad1b38b7c732472bba7b0ec" kindref="member">dht22_interrupt_handler</ref>(<ref refid="structdht22" kindref="compound">dht22</ref>*<sp/>handle)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>val<sp/>=<sp/>HAL_TIM_ReadCapturedValue(handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a30b15aedcc086ca7abb69f7ac012ce64" kindref="member">timer</ref>,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1ab326e0814c94b277efd81f8527ccc3d8" kindref="member">config</ref>.<ref refid="structdht22__config_1a9209e1ec26ff459b75d3981ca197ec43" kindref="member">timer_channel</ref>);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>dt<sp/>=<sp/>val<sp/>-<sp/>handle-&gt;<ref refid="structdht22_1a866a73f568a9c1580242de93194402d2" kindref="member">last_val</ref>;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref><sp/>==<sp/>-2)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>the<sp/>start<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" kindref="member">BETWEEN</ref>(20,<sp/>40))<sp/>{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref>++;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dht22_8c_1a1192e506d4a87efdd7c82c096fcaaa25" kindref="member">TIMING_ERROR</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref><sp/>==<sp/>-1)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>end<sp/>of<sp/>the<sp/>start<sp/>bit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" kindref="member">BETWEEN</ref>(150,<sp/>170))<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref>++;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dht22_8c_1a1192e506d4a87efdd7c82c096fcaaa25" kindref="member">TIMING_ERROR</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>data<sp/>bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" kindref="member">BETWEEN</ref>(70,<sp/>90))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>zero</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_bit(handle,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref>++;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dht22_8c_1a49e2b9281e2eb3056ab463dd03891f74" kindref="member">BETWEEN</ref>(110,<sp/>130))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>write_bit(handle,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref>++;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dht22_8c_1a1192e506d4a87efdd7c82c096fcaaa25" kindref="member">TIMING_ERROR</ref>();</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(handle-&gt;<ref refid="structdht22_1a3bdb49ed9986f21df0b78879c749192c" kindref="member">bit_pos</ref><sp/>==<sp/>40)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>finished</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>finish_rx(handle);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>handle-&gt;<ref refid="structdht22_1a866a73f568a9c1580242de93194402d2" kindref="member">last_val</ref><sp/>=<sp/>val;</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/dht22.c"/>
  </compounddef>
</doxygen>
